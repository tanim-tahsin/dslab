#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_SEATS 50
#define MAX_NAME_LENGTH 50

// Structure for a seat
typedef struct {
    int seatNumber;
    char passengerName[MAX_NAME_LENGTH];
    int isBooked;
    char classType[20]; // Class type: General, AC, Sleeper, etc.
} Seat;

// Structure for a train
typedef struct {
    int trainNumber;
    char trainName[MAX_NAME_LENGTH];
    char departureTime[10];
    Seat seats[MAX_SEATS];
} Train;

// Function to initialize seats in a train
void initializeSeats(Train* train) {
    for (int i = 0; i < MAX_SEATS; i++) {
        train->seats[i].seatNumber = i + 1;
        train->seats[i].isBooked = 0;
        strcpy(train->seats[i].passengerName, "");
        if (i < 20) strcpy(train->seats[i].classType, "General");
        else if (i < 40) strcpy(train->seats[i].classType, "AC");
        else strcpy(train->seats[i].classType, "Sleeper");
    }
}

// Function to display available seats
void displayAvailableSeats(Train* train) {
    printf("Available Seats:\n");
    printf("Seat Number\tClass\n");
    for (int i = 0; i < MAX_SEATS; i++) {
        if (!train->seats[i].isBooked) {
            printf("%d\t\t%s\n", train->seats[i].seatNumber, train->seats[i].classType);
        }
    }
}

// Function to book a seat
void bookSeat(Train* train) {
    int seatNum;
    char name[MAX_NAME_LENGTH];

    printf("Enter seat number to book (1-%d): ", MAX_SEATS);
    scanf("%d", &seatNum);

    if (seatNum < 1 || seatNum > MAX_SEATS) {
        printf("Invalid seat number.\n");
        return;
    }

    if (train->seats[seatNum - 1].isBooked) {
        printf("Seat %d is already booked.\n", seatNum);
        return;
    }

    printf("Enter passenger name: ");
    scanf("%s", name);

    train->seats[seatNum - 1].isBooked = 1;
    strcpy(train->seats[seatNum - 1].passengerName, name);
    printf("Seat %d booked successfully for %s.\n", seatNum, name);
}

// Function to cancel a seat
void cancelSeat(Train* train) {
    int seatNum;

    printf("Enter seat number to cancel (1-%d): ", MAX_SEATS);
    scanf("%d", &seatNum);

    if (seatNum < 1 || seatNum > MAX_SEATS) {
        printf("Invalid seat number.\n");
        return;
    }

    if (!train->seats[seatNum - 1].isBooked) {
        printf("Seat %d is not booked.\n", seatNum);
        return;
    }

    train->seats[seatNum - 1].isBooked = 0;
    strcpy(train->seats[seatNum - 1].passengerName, "");
    printf("Booking for seat %d canceled successfully.\n", seatNum);
}

// Function to search for available seats by class
void searchByClass(Train* train, char* classType) {
    printf("Available Seats in %s Class:\n", classType);
    printf("Seat Number\n");
    for (int i = 0; i < MAX_SEATS; i++) {
        if (!train->seats[i].isBooked && strcmp(train->seats[i].classType, classType) == 0) {
            printf("%d\n", train->seats[i].seatNumber);
        }
    }
}

// Function to display train schedule
void displaySchedule(Train* train) {
    printf("Train Number: %d\n", train->trainNumber);
    printf("Train Name: %s\n", train->trainName);
    printf("Departure Time: %s\n", train->departureTime);
}

// Function to generate a booking report
void generateBookingReport(Train* train) {
    printf("Booking Report:\n");
    printf("Seat Number\tPassenger Name\tClass\n");
    for (int i = 0; i < MAX_SEATS; i++) {
        if (train->seats[i].isBooked) {
            printf("%d\t\t%s\t\t%s\n", train->seats[i].seatNumber, train->seats[i].passengerName, train->seats[i].classType);
        }
    }
}

int main() {
    Train train;

    // Initialize train details
    train.trainNumber = 12345;
    strcpy(train.trainName, "Express Train");
    strcpy(train.departureTime, "10:00 AM");

    // Initialize seats
    initializeSeats(&train);

    int choice;
    char classType[20];

    while (1) {
        printf("\nTrain Ticket Reservation System\n");
        printf("1. Display Available Seats\n");
        printf("2. Book a Seat\n");
        printf("3. Cancel Booking\n");
        printf("4. Search by Class\n");
        printf("5. Display Train Schedule\n");
        printf("6. Generate Booking Report\n");
        printf("7. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                displayAvailableSeats(&train);
                break;
            case 2:
                bookSeat(&train);
                break;
            case 3:
                cancelSeat(&train);
                break;
            case 4:
                printf("Enter class type (General/AC/Sleeper): ");
                scanf("%s", classType);
                searchByClass(&train, classType);
                break;
            case 5:
                displaySchedule(&train);
                break;
            case 6:
                generateBookingReport(&train);
                break;
            case 7:
                exit(0);
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}

